;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/13/2019 4:32:07 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF16  	GOTO        44
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x001C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x001E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0022	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0024	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0026	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0028	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x002A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x002C	0x6A15      	CLRF        _i 
0x002E	0x6A16      	CLRF        22 
0x0030	0x0E03      	MOVLW       3
0x0032	0x6E17      	MOVWF       _counter 
0x0034	0x6A18      	CLRF        24 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,8 :: 		void main()
;4 tasks in leds_led 2 by 2 or 3 by 3.c,11 :: 		clearReg(TRISC);
0x0036	0x0E00      	MOVLW       0
0x0038	0x1694      	ANDWF       TRISC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,12 :: 		clearReg(TRISD);
0x003A	0x0E00      	MOVLW       0
0x003C	0x1695      	ANDWF       TRISD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,15 :: 		clearReg(PORTC);
0x003E	0x0E00      	MOVLW       0
0x0040	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,16 :: 		clearReg(PORTD);
0x0042	0x0E00      	MOVLW       0
0x0044	0x1683      	ANDWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,18 :: 		while(1)
L_main0:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,23 :: 		counter = 3;
0x0046	0x0E03      	MOVLW       3
0x0048	0x6E17      	MOVWF       _counter 
0x004A	0x0E00      	MOVLW       0
0x004C	0x6E18      	MOVWF       _counter+1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,24 :: 		while (counter)
L_main2:
0x004E	0x5017      	MOVF        _counter, 0 
0x0050	0x1018      	IORWF       _counter+1, 0 
0x0052	0xE05F      	BZ          L_main3
;4 tasks in leds_led 2 by 2 or 3 by 3.c,26 :: 		for ( i = 0 ; i<=6 ;i+=2)
0x0054	0x6A15      	CLRF        _i 
0x0056	0x6A16      	CLRF        _i+1 
L_main4:
0x0058	0x0E80      	MOVLW       128
0x005A	0x6E00      	MOVWF       R0 
0x005C	0x0E80      	MOVLW       128
0x005E	0x1816      	XORWF       _i+1, 0 
0x0060	0x5C00      	SUBWF       R0, 0 
0x0062	0xE102      	BNZ         L__main39
0x0064	0x5015      	MOVF        _i, 0 
0x0066	0x0806      	SUBLW       6
L__main39:
0x0068	0xE321      	BNC         L_main5
;4 tasks in leds_led 2 by 2 or 3 by 3.c,28 :: 		clearReg(PORTC);
0x006A	0x0E00      	MOVLW       0
0x006C	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,29 :: 		PORTC |= (3<<i);
0x006E	0xF001C015  	MOVFF       _i, R1
0x0072	0x0E03      	MOVLW       3
0x0074	0x6E00      	MOVWF       R0 
0x0076	0x5001      	MOVF        R1, 0 
L__main40:
0x0078	0xE004      	BZ          L__main41
0x007A	0x3600      	RLCF        R0, 1 
0x007C	0x9000      	BCF         R0, 0 
0x007E	0x0FFF      	ADDLW       255
0x0080	0xD7FB      	BRA         L__main40
L__main41:
0x0082	0x5000      	MOVF        R0, 0 
0x0084	0x1282      	IORWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,30 :: 		delay_ms(500);
0x0086	0x0E06      	MOVLW       6
0x0088	0x6E0B      	MOVWF       R11, 0
0x008A	0x0E13      	MOVLW       19
0x008C	0x6E0C      	MOVWF       R12, 0
0x008E	0x0EAD      	MOVLW       173
0x0090	0x6E0D      	MOVWF       R13, 0
L_main7:
0x0092	0x2E0D      	DECFSZ      R13, 1, 0
0x0094	0xD7FE      	BRA         L_main7
0x0096	0x2E0C      	DECFSZ      R12, 1, 0
0x0098	0xD7FC      	BRA         L_main7
0x009A	0x2E0B      	DECFSZ      R11, 1, 0
0x009C	0xD7FA      	BRA         L_main7
0x009E	0x0000      	NOP
0x00A0	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,26 :: 		for ( i = 0 ; i<=6 ;i+=2)
0x00A2	0x0E02      	MOVLW       2
0x00A4	0x2615      	ADDWF       _i, 1 
0x00A6	0x0E00      	MOVLW       0
0x00A8	0x2216      	ADDWFC      _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,32 :: 		}
0x00AA	0xD7D6      	BRA         L_main4
L_main5:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,34 :: 		for (i = 4 ;i>0 ;i-=2)
0x00AC	0x0E04      	MOVLW       4
0x00AE	0x6E15      	MOVWF       _i 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x6E16      	MOVWF       _i+1 
L_main8:
0x00B4	0x0E80      	MOVLW       128
0x00B6	0x6E00      	MOVWF       R0 
0x00B8	0x0E80      	MOVLW       128
0x00BA	0x1816      	XORWF       _i+1, 0 
0x00BC	0x5C00      	SUBWF       R0, 0 
0x00BE	0xE102      	BNZ         L__main42
0x00C0	0x5015      	MOVF        _i, 0 
0x00C2	0x0800      	SUBLW       0
L__main42:
0x00C4	0xE221      	BC          L_main9
;4 tasks in leds_led 2 by 2 or 3 by 3.c,36 :: 		clearReg(PORTC);
0x00C6	0x0E00      	MOVLW       0
0x00C8	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,37 :: 		PORTC |= (3<<i);
0x00CA	0xF001C015  	MOVFF       _i, R1
0x00CE	0x0E03      	MOVLW       3
0x00D0	0x6E00      	MOVWF       R0 
0x00D2	0x5001      	MOVF        R1, 0 
L__main43:
0x00D4	0xE004      	BZ          L__main44
0x00D6	0x3600      	RLCF        R0, 1 
0x00D8	0x9000      	BCF         R0, 0 
0x00DA	0x0FFF      	ADDLW       255
0x00DC	0xD7FB      	BRA         L__main43
L__main44:
0x00DE	0x5000      	MOVF        R0, 0 
0x00E0	0x1282      	IORWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,38 :: 		delay_ms(500);
0x00E2	0x0E06      	MOVLW       6
0x00E4	0x6E0B      	MOVWF       R11, 0
0x00E6	0x0E13      	MOVLW       19
0x00E8	0x6E0C      	MOVWF       R12, 0
0x00EA	0x0EAD      	MOVLW       173
0x00EC	0x6E0D      	MOVWF       R13, 0
L_main11:
0x00EE	0x2E0D      	DECFSZ      R13, 1, 0
0x00F0	0xD7FE      	BRA         L_main11
0x00F2	0x2E0C      	DECFSZ      R12, 1, 0
0x00F4	0xD7FC      	BRA         L_main11
0x00F6	0x2E0B      	DECFSZ      R11, 1, 0
0x00F8	0xD7FA      	BRA         L_main11
0x00FA	0x0000      	NOP
0x00FC	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,34 :: 		for (i = 4 ;i>0 ;i-=2)
0x00FE	0x0E02      	MOVLW       2
0x0100	0x5E15      	SUBWF       _i, 1 
0x0102	0x0E00      	MOVLW       0
0x0104	0x5A16      	SUBWFB      _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,40 :: 		}
0x0106	0xD7D6      	BRA         L_main8
L_main9:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,42 :: 		counter--;
0x0108	0x0E01      	MOVLW       1
0x010A	0x5E17      	SUBWF       _counter, 1 
0x010C	0x0E00      	MOVLW       0
0x010E	0x5A18      	SUBWFB      _counter+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,43 :: 		}
0x0110	0xD79E      	BRA         L_main2
L_main3:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,45 :: 		clearReg(PORTC);
0x0112	0x0E00      	MOVLW       0
0x0114	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,48 :: 		counter = 3;
0x0116	0x0E03      	MOVLW       3
0x0118	0x6E17      	MOVWF       _counter 
0x011A	0x0E00      	MOVLW       0
0x011C	0x6E18      	MOVWF       _counter+1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,49 :: 		while (counter)
L_main12:
0x011E	0x5017      	MOVF        _counter, 0 
0x0120	0x1018      	IORWF       _counter+1, 0 
0x0122	0xE05F      	BZ          L_main13
;4 tasks in leds_led 2 by 2 or 3 by 3.c,51 :: 		for ( i = 0 ; i<=3 ;i+=3)
0x0124	0x6A15      	CLRF        _i 
0x0126	0x6A16      	CLRF        _i+1 
L_main14:
0x0128	0x0E80      	MOVLW       128
0x012A	0x6E00      	MOVWF       R0 
0x012C	0x0E80      	MOVLW       128
0x012E	0x1816      	XORWF       _i+1, 0 
0x0130	0x5C00      	SUBWF       R0, 0 
0x0132	0xE102      	BNZ         L__main45
0x0134	0x5015      	MOVF        _i, 0 
0x0136	0x0803      	SUBLW       3
L__main45:
0x0138	0xE321      	BNC         L_main15
;4 tasks in leds_led 2 by 2 or 3 by 3.c,53 :: 		clearReg(PORTD);
0x013A	0x0E00      	MOVLW       0
0x013C	0x1683      	ANDWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,54 :: 		PORTD |= (7<<i);
0x013E	0xF001C015  	MOVFF       _i, R1
0x0142	0x0E07      	MOVLW       7
0x0144	0x6E00      	MOVWF       R0 
0x0146	0x5001      	MOVF        R1, 0 
L__main46:
0x0148	0xE004      	BZ          L__main47
0x014A	0x3600      	RLCF        R0, 1 
0x014C	0x9000      	BCF         R0, 0 
0x014E	0x0FFF      	ADDLW       255
0x0150	0xD7FB      	BRA         L__main46
L__main47:
0x0152	0x5000      	MOVF        R0, 0 
0x0154	0x1283      	IORWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,55 :: 		delay_ms(500);
0x0156	0x0E06      	MOVLW       6
0x0158	0x6E0B      	MOVWF       R11, 0
0x015A	0x0E13      	MOVLW       19
0x015C	0x6E0C      	MOVWF       R12, 0
0x015E	0x0EAD      	MOVLW       173
0x0160	0x6E0D      	MOVWF       R13, 0
L_main17:
0x0162	0x2E0D      	DECFSZ      R13, 1, 0
0x0164	0xD7FE      	BRA         L_main17
0x0166	0x2E0C      	DECFSZ      R12, 1, 0
0x0168	0xD7FC      	BRA         L_main17
0x016A	0x2E0B      	DECFSZ      R11, 1, 0
0x016C	0xD7FA      	BRA         L_main17
0x016E	0x0000      	NOP
0x0170	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,51 :: 		for ( i = 0 ; i<=3 ;i+=3)
0x0172	0x0E03      	MOVLW       3
0x0174	0x2615      	ADDWF       _i, 1 
0x0176	0x0E00      	MOVLW       0
0x0178	0x2216      	ADDWFC      _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,57 :: 		}
0x017A	0xD7D6      	BRA         L_main14
L_main15:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,59 :: 		for (i = 5 ;i>=2 ;i-=3)
0x017C	0x0E05      	MOVLW       5
0x017E	0x6E15      	MOVWF       _i 
0x0180	0x0E00      	MOVLW       0
0x0182	0x6E16      	MOVWF       _i+1 
L_main18:
0x0184	0x0E80      	MOVLW       128
0x0186	0x1816      	XORWF       _i+1, 0 
0x0188	0x6E00      	MOVWF       R0 
0x018A	0x0E80      	MOVLW       128
0x018C	0x5C00      	SUBWF       R0, 0 
0x018E	0xE102      	BNZ         L__main48
0x0190	0x0E02      	MOVLW       2
0x0192	0x5C15      	SUBWF       _i, 0 
L__main48:
0x0194	0xE321      	BNC         L_main19
;4 tasks in leds_led 2 by 2 or 3 by 3.c,61 :: 		clearReg(PORTD);
0x0196	0x0E00      	MOVLW       0
0x0198	0x1683      	ANDWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,62 :: 		PORTD |= (7<<i);
0x019A	0xF001C015  	MOVFF       _i, R1
0x019E	0x0E07      	MOVLW       7
0x01A0	0x6E00      	MOVWF       R0 
0x01A2	0x5001      	MOVF        R1, 0 
L__main49:
0x01A4	0xE004      	BZ          L__main50
0x01A6	0x3600      	RLCF        R0, 1 
0x01A8	0x9000      	BCF         R0, 0 
0x01AA	0x0FFF      	ADDLW       255
0x01AC	0xD7FB      	BRA         L__main49
L__main50:
0x01AE	0x5000      	MOVF        R0, 0 
0x01B0	0x1283      	IORWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,63 :: 		delay_ms(500);
0x01B2	0x0E06      	MOVLW       6
0x01B4	0x6E0B      	MOVWF       R11, 0
0x01B6	0x0E13      	MOVLW       19
0x01B8	0x6E0C      	MOVWF       R12, 0
0x01BA	0x0EAD      	MOVLW       173
0x01BC	0x6E0D      	MOVWF       R13, 0
L_main21:
0x01BE	0x2E0D      	DECFSZ      R13, 1, 0
0x01C0	0xD7FE      	BRA         L_main21
0x01C2	0x2E0C      	DECFSZ      R12, 1, 0
0x01C4	0xD7FC      	BRA         L_main21
0x01C6	0x2E0B      	DECFSZ      R11, 1, 0
0x01C8	0xD7FA      	BRA         L_main21
0x01CA	0x0000      	NOP
0x01CC	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,59 :: 		for (i = 5 ;i>=2 ;i-=3)
0x01CE	0x0E03      	MOVLW       3
0x01D0	0x5E15      	SUBWF       _i, 1 
0x01D2	0x0E00      	MOVLW       0
0x01D4	0x5A16      	SUBWFB      _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,65 :: 		}
0x01D6	0xD7D6      	BRA         L_main18
L_main19:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,66 :: 		counter--;
0x01D8	0x0E01      	MOVLW       1
0x01DA	0x5E17      	SUBWF       _counter, 1 
0x01DC	0x0E00      	MOVLW       0
0x01DE	0x5A18      	SUBWFB      _counter+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,67 :: 		}
0x01E0	0xD79E      	BRA         L_main12
L_main13:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,68 :: 		clearReg(PORTD);
0x01E2	0x0E00      	MOVLW       0
0x01E4	0x1683      	ANDWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,72 :: 		counter = 3;
0x01E6	0x0E03      	MOVLW       3
0x01E8	0x6E17      	MOVWF       _counter 
0x01EA	0x0E00      	MOVLW       0
0x01EC	0x6E18      	MOVWF       _counter+1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,73 :: 		while (counter)
L_main22:
0x01EE	0x5017      	MOVF        _counter, 0 
0x01F0	0x1018      	IORWF       _counter+1, 0 
0x01F2	0xE03B      	BZ          L_main23
;4 tasks in leds_led 2 by 2 or 3 by 3.c,76 :: 		for( i = 0 ; i<=7 ; i++)
0x01F4	0x6A15      	CLRF        _i 
0x01F6	0x6A16      	CLRF        _i+1 
L_main24:
0x01F8	0x0E80      	MOVLW       128
0x01FA	0x6E00      	MOVWF       R0 
0x01FC	0x0E80      	MOVLW       128
0x01FE	0x1816      	XORWF       _i+1, 0 
0x0200	0x5C00      	SUBWF       R0, 0 
0x0202	0xE102      	BNZ         L__main51
0x0204	0x5015      	MOVF        _i, 0 
0x0206	0x0807      	SUBLW       7
L__main51:
0x0208	0xE32B      	BNC         L_main25
;4 tasks in leds_led 2 by 2 or 3 by 3.c,78 :: 		PORTC |=((128>>i)|(1<<i));
0x020A	0xF000C015  	MOVFF       _i, R0
0x020E	0x0E80      	MOVLW       128
0x0210	0x6E02      	MOVWF       R2 
0x0212	0x5000      	MOVF        R0, 0 
L__main52:
0x0214	0xE004      	BZ          L__main53
0x0216	0x3202      	RRCF        R2, 1 
0x0218	0x9E02      	BCF         R2, 7 
0x021A	0x0FFF      	ADDLW       255
0x021C	0xD7FB      	BRA         L__main52
L__main53:
0x021E	0xF001C015  	MOVFF       _i, R1
0x0222	0x0E01      	MOVLW       1
0x0224	0x6E00      	MOVWF       R0 
0x0226	0x5001      	MOVF        R1, 0 
L__main54:
0x0228	0xE004      	BZ          L__main55
0x022A	0x3600      	RLCF        R0, 1 
0x022C	0x9000      	BCF         R0, 0 
0x022E	0x0FFF      	ADDLW       255
0x0230	0xD7FB      	BRA         L__main54
L__main55:
0x0232	0x5002      	MOVF        R2, 0 
0x0234	0x1200      	IORWF       R0, 1 
0x0236	0x5000      	MOVF        R0, 0 
0x0238	0x1282      	IORWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,79 :: 		delay_ms(500);
0x023A	0x0E06      	MOVLW       6
0x023C	0x6E0B      	MOVWF       R11, 0
0x023E	0x0E13      	MOVLW       19
0x0240	0x6E0C      	MOVWF       R12, 0
0x0242	0x0EAD      	MOVLW       173
0x0244	0x6E0D      	MOVWF       R13, 0
L_main27:
0x0246	0x2E0D      	DECFSZ      R13, 1, 0
0x0248	0xD7FE      	BRA         L_main27
0x024A	0x2E0C      	DECFSZ      R12, 1, 0
0x024C	0xD7FC      	BRA         L_main27
0x024E	0x2E0B      	DECFSZ      R11, 1, 0
0x0250	0xD7FA      	BRA         L_main27
0x0252	0x0000      	NOP
0x0254	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,80 :: 		clearReg(PORTC);
0x0256	0x0E00      	MOVLW       0
0x0258	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,76 :: 		for( i = 0 ; i<=7 ; i++)
0x025A	0x4A15      	INFSNZ      _i, 1 
0x025C	0x2A16      	INCF        _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,81 :: 		}
0x025E	0xD7CC      	BRA         L_main24
L_main25:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,83 :: 		counter--;
0x0260	0x0E01      	MOVLW       1
0x0262	0x5E17      	SUBWF       _counter, 1 
0x0264	0x0E00      	MOVLW       0
0x0266	0x5A18      	SUBWFB      _counter+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,84 :: 		}
0x0268	0xD7C2      	BRA         L_main22
L_main23:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,85 :: 		clearReg(PORTC);
0x026A	0x0E00      	MOVLW       0
0x026C	0x1682      	ANDWF       PORTC, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,89 :: 		counter = 3;
0x026E	0x0E03      	MOVLW       3
0x0270	0x6E17      	MOVWF       _counter 
0x0272	0x0E00      	MOVLW       0
0x0274	0x6E18      	MOVWF       _counter+1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,90 :: 		while (counter)
L_main28:
0x0276	0x5017      	MOVF        _counter, 0 
0x0278	0x1018      	IORWF       _counter+1, 0 
0x027A	0xE056      	BZ          L_main29
;4 tasks in leds_led 2 by 2 or 3 by 3.c,92 :: 		for( i = 0 ; i<=7 ; i++)
0x027C	0x6A15      	CLRF        _i 
0x027E	0x6A16      	CLRF        _i+1 
L_main30:
0x0280	0x0E80      	MOVLW       128
0x0282	0x6E00      	MOVWF       R0 
0x0284	0x0E80      	MOVLW       128
0x0286	0x1816      	XORWF       _i+1, 0 
0x0288	0x5C00      	SUBWF       R0, 0 
0x028A	0xE102      	BNZ         L__main56
0x028C	0x5015      	MOVF        _i, 0 
0x028E	0x0807      	SUBLW       7
L__main56:
0x0290	0xE31D      	BNC         L_main31
;4 tasks in leds_led 2 by 2 or 3 by 3.c,94 :: 		PORTD |=(1<<i);
0x0292	0xF001C015  	MOVFF       _i, R1
0x0296	0x0E01      	MOVLW       1
0x0298	0x6E00      	MOVWF       R0 
0x029A	0x5001      	MOVF        R1, 0 
L__main57:
0x029C	0xE004      	BZ          L__main58
0x029E	0x3600      	RLCF        R0, 1 
0x02A0	0x9000      	BCF         R0, 0 
0x02A2	0x0FFF      	ADDLW       255
0x02A4	0xD7FB      	BRA         L__main57
L__main58:
0x02A6	0x5000      	MOVF        R0, 0 
0x02A8	0x1283      	IORWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,95 :: 		delay_ms(500);
0x02AA	0x0E06      	MOVLW       6
0x02AC	0x6E0B      	MOVWF       R11, 0
0x02AE	0x0E13      	MOVLW       19
0x02B0	0x6E0C      	MOVWF       R12, 0
0x02B2	0x0EAD      	MOVLW       173
0x02B4	0x6E0D      	MOVWF       R13, 0
L_main33:
0x02B6	0x2E0D      	DECFSZ      R13, 1, 0
0x02B8	0xD7FE      	BRA         L_main33
0x02BA	0x2E0C      	DECFSZ      R12, 1, 0
0x02BC	0xD7FC      	BRA         L_main33
0x02BE	0x2E0B      	DECFSZ      R11, 1, 0
0x02C0	0xD7FA      	BRA         L_main33
0x02C2	0x0000      	NOP
0x02C4	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,92 :: 		for( i = 0 ; i<=7 ; i++)
0x02C6	0x4A15      	INFSNZ      _i, 1 
0x02C8	0x2A16      	INCF        _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,97 :: 		}
0x02CA	0xD7DA      	BRA         L_main30
L_main31:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,98 :: 		for( i = 0 ; i<=7 ; i++)
0x02CC	0x6A15      	CLRF        _i 
0x02CE	0x6A16      	CLRF        _i+1 
L_main34:
0x02D0	0x0E80      	MOVLW       128
0x02D2	0x6E00      	MOVWF       R0 
0x02D4	0x0E80      	MOVLW       128
0x02D6	0x1816      	XORWF       _i+1, 0 
0x02D8	0x5C00      	SUBWF       R0, 0 
0x02DA	0xE102      	BNZ         L__main59
0x02DC	0x5015      	MOVF        _i, 0 
0x02DE	0x0807      	SUBLW       7
L__main59:
0x02E0	0xE31E      	BNC         L_main35
;4 tasks in leds_led 2 by 2 or 3 by 3.c,100 :: 		PORTD &=~(128>>i);
0x02E2	0xF001C015  	MOVFF       _i, R1
0x02E6	0x0E80      	MOVLW       128
0x02E8	0x6E00      	MOVWF       R0 
0x02EA	0x5001      	MOVF        R1, 0 
L__main60:
0x02EC	0xE004      	BZ          L__main61
0x02EE	0x3200      	RRCF        R0, 1 
0x02F0	0x9E00      	BCF         R0, 7 
0x02F2	0x0FFF      	ADDLW       255
0x02F4	0xD7FB      	BRA         L__main60
L__main61:
0x02F6	0x1E00      	COMF        R0, 1 
0x02F8	0x5000      	MOVF        R0, 0 
0x02FA	0x1683      	ANDWF       PORTD, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,101 :: 		delay_ms(500);
0x02FC	0x0E06      	MOVLW       6
0x02FE	0x6E0B      	MOVWF       R11, 0
0x0300	0x0E13      	MOVLW       19
0x0302	0x6E0C      	MOVWF       R12, 0
0x0304	0x0EAD      	MOVLW       173
0x0306	0x6E0D      	MOVWF       R13, 0
L_main37:
0x0308	0x2E0D      	DECFSZ      R13, 1, 0
0x030A	0xD7FE      	BRA         L_main37
0x030C	0x2E0C      	DECFSZ      R12, 1, 0
0x030E	0xD7FC      	BRA         L_main37
0x0310	0x2E0B      	DECFSZ      R11, 1, 0
0x0312	0xD7FA      	BRA         L_main37
0x0314	0x0000      	NOP
0x0316	0x0000      	NOP
;4 tasks in leds_led 2 by 2 or 3 by 3.c,98 :: 		for( i = 0 ; i<=7 ; i++)
0x0318	0x4A15      	INFSNZ      _i, 1 
0x031A	0x2A16      	INCF        _i+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,102 :: 		}
0x031C	0xD7D9      	BRA         L_main34
L_main35:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,104 :: 		counter--;
0x031E	0x0E01      	MOVLW       1
0x0320	0x5E17      	SUBWF       _counter, 1 
0x0322	0x0E00      	MOVLW       0
0x0324	0x5A18      	SUBWFB      _counter+1, 1 
;4 tasks in leds_led 2 by 2 or 3 by 3.c,105 :: 		}
0x0326	0xD7A7      	BRA         L_main28
L_main29:
;4 tasks in leds_led 2 by 2 or 3 by 3.c,108 :: 		}
0x0328	0xD68E      	BRA         L_main0
;4 tasks in leds_led 2 by 2 or 3 by 3.c,110 :: 		}
L_end_main:
0x032A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [16]    ___CC2DW
0x002C     [768]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _i
0x0017       [2]    _counter
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_end_main
  _main
  L__main39
  L__main40
  L__main41
  L__main42
  L__main43
  L__main44
  L__main45
  L__main46
  L__main47
  L__main48
  L__main49
  L__main50
  L__main51
  L__main52
  L__main53
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
